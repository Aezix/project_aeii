package net.toyknight.aeii.campaign.challenge;import net.toyknight.aeii.campaign.Message;import net.toyknight.aeii.campaign.StageController;import net.toyknight.aeii.entity.Rule;import net.toyknight.aeii.entity.Unit;import net.toyknight.aeii.system.AER;/** * @author youxing 10/13/2016. */public class ChallengeStage7 extends StageController {    @Override    public void onGameStart() {        getContext().gold(0, 500);        getContext().alliance(0, 0);        getContext().alliance(1, 1);        getContext().alliance(2, 1);        getContext().alliance(3, 1);        Message message = new Message(5, AER.lang.getText("CAMPAIGN_CHALLENGE_STAGE_7_MESSAGE_1"));        getContext().message(message);//        Message message1 = new Message(5, AER.lang.getText("CAMPAIGN_CHALLENGE_STAGE_7_MESSAGE_2"));//        getContext().message(message1);    }    @Override    public void onUnitMoved(Unit unit, int x, int y) {    }    @Override    public void onUnitStandby(Unit unit) {    }    @Override    public void onUnitAttacked(Unit attacker, Unit defender) {    }    @Override    public void onUnitDestroyed(Unit unit) {        if (isCommander(unit, getPlayerTeam())) {            getContext().fail();        } else {            if (getContext().count_unit(1) == 0) {                getContext().clear();            }        }    }    @Override    public void onTileRepaired(int x, int y) {    }    @Override    public void onTileOccupied(int x, int y, int team) {    }    @Override    public void onTurnStart(int turn) {        if (getContext().current_team() == 1) {            int x[] = {4, 4, 6, 6, 6, 6, 6, 8, 8, 10, 10, 10};            int y[] = {1, 9, 0, 3, 5, 7, 10, 3, 7, 2, 5, 8};            for (Unit unit : getContext().get_units(0)) {                for (int i = 0; i < 12; i++) {                    if (unit.getX() == x[i] && unit.getY() == y[i]) {                        if (unit.isCommander()) {                            getContext().fail();                        }                        unit.setTeam(1);                    }                }            }        }    }    @Override    public String getMapName() {        return "challenge_stage_7.aem";    }    @Override    public Rule getRule() {        Rule rule = Rule.createDefault();        rule.setValue(Rule.Entry.UNIT_CAPACITY, 30);        return rule;    }    @Override    public int getStartGold() {        return 500;    }    @Override    public int getPlayerTeam() {        return 0;    }    @Override    public String[] getObjectives() {        return new String[]{                AER.lang.getText("CAMPAIGN_CHALLENGE_STAGE_7_OBJECTIVE_1"),                AER.lang.getText("CAMPAIGN_CHALLENGE_STAGE_7_OBJECTIVE_2")        };    }    @Override    public int getStageNumber() {        return 6;    }    @Override    public String getStageName() {        return AER.lang.getText("CAMPAIGN_CHALLENGE_STAGE_7_NAME");    }}